// Code generated by counterfeiter. DO NOT EDIT.
package clifakes

import (
	"sync"
)

type FakeGptService struct {
	ClipCodingStandardsPrefaceStub        func() error
	clipCodingStandardsPrefaceMutex       sync.RWMutex
	clipCodingStandardsPrefaceArgsForCall []struct {
	}
	clipCodingStandardsPrefaceReturns struct {
		result1 error
	}
	clipCodingStandardsPrefaceReturnsOnCall map[int]struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeGptService) ClipCodingStandardsPreface() error {
	fake.clipCodingStandardsPrefaceMutex.Lock()
	ret, specificReturn := fake.clipCodingStandardsPrefaceReturnsOnCall[len(fake.clipCodingStandardsPrefaceArgsForCall)]
	fake.clipCodingStandardsPrefaceArgsForCall = append(fake.clipCodingStandardsPrefaceArgsForCall, struct {
	}{})
	stub := fake.ClipCodingStandardsPrefaceStub
	fakeReturns := fake.clipCodingStandardsPrefaceReturns
	fake.recordInvocation("ClipCodingStandardsPreface", []interface{}{})
	fake.clipCodingStandardsPrefaceMutex.Unlock()
	if stub != nil {
		return stub()
	}
	if specificReturn {
		return ret.result1
	}
	return fakeReturns.result1
}

func (fake *FakeGptService) ClipCodingStandardsPrefaceCallCount() int {
	fake.clipCodingStandardsPrefaceMutex.RLock()
	defer fake.clipCodingStandardsPrefaceMutex.RUnlock()
	return len(fake.clipCodingStandardsPrefaceArgsForCall)
}

func (fake *FakeGptService) ClipCodingStandardsPrefaceCalls(stub func() error) {
	fake.clipCodingStandardsPrefaceMutex.Lock()
	defer fake.clipCodingStandardsPrefaceMutex.Unlock()
	fake.ClipCodingStandardsPrefaceStub = stub
}

func (fake *FakeGptService) ClipCodingStandardsPrefaceReturns(result1 error) {
	fake.clipCodingStandardsPrefaceMutex.Lock()
	defer fake.clipCodingStandardsPrefaceMutex.Unlock()
	fake.ClipCodingStandardsPrefaceStub = nil
	fake.clipCodingStandardsPrefaceReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeGptService) ClipCodingStandardsPrefaceReturnsOnCall(i int, result1 error) {
	fake.clipCodingStandardsPrefaceMutex.Lock()
	defer fake.clipCodingStandardsPrefaceMutex.Unlock()
	fake.ClipCodingStandardsPrefaceStub = nil
	if fake.clipCodingStandardsPrefaceReturnsOnCall == nil {
		fake.clipCodingStandardsPrefaceReturnsOnCall = make(map[int]struct {
			result1 error
		})
	}
	fake.clipCodingStandardsPrefaceReturnsOnCall[i] = struct {
		result1 error
	}{result1}
}

func (fake *FakeGptService) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.clipCodingStandardsPrefaceMutex.RLock()
	defer fake.clipCodingStandardsPrefaceMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeGptService) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}
